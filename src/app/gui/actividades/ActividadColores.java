package app.gui.actividades;

import app.gui.inicio.MainScreen;
import app.logic.Fecha;
import app.logic.ResultadoActividad;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.util.StringTokenizer;
import javax.swing.*;

public class ActividadColores extends javax.swing.JFrame {

    /**
     * Creates new form actividadColores
     */
    // Atributos del timer
    Timer timer;
    final int[] sec = {0};
    int orden = 0;

    /*
     Creo objetos de imagen y posición
     
     */
    Icon icono = new ImageIcon();
    Object[] selectColor = {"", "", "", "", "", ""};

    /*
    * Arreglo de cadena con la respuesta de los colores
     */
    private final String[] respuestaColor = {
        "Rojo", "Azul", "Amarillo", "Verde", "Magenta"
    };

    /*
   *Arreglo de cadena con todas las opciones de respuesta
     */
    private final String[] radioRC = {
        "Azul,Rojo,Blanco,Amarillo,Morado",
        "Negro,Naranja,Café,Rojo,Azul",
        "Rosado,Amarillo,Magenta,Celeste,Gris",
        "Salmón,Mostaza,Verde,Blanco,Morado",
        "Negro,Rojo,Celeste,Turquesa,Magenta",};

    /**
     *
     * @param orden Método get que recibe posición y retorna la posición de la
     * respuesta
     */
    public String getColor(int orden) {
        return respuestaColor[orden];
    }

    /**
     *
     * @param orden recibe una poisición y de acuerdo al radio de respuestas
     * separa la respuesta del arreglo cadena
     */
    public String[] setRespuestaColor(int orden) {
        String s1 = radioRC[orden];
        String[] s2 = separar2(s1, ",");//separa con la coma y el método separar
        return s2;//retorna la respuesta 
    }

    /**
     *
     * @param cadena
     * @param separador Método que sirve para separar el arreglo de cadenas
     */
    public String[] separar2(String cadena, String separador) {
        StringTokenizer token = new StringTokenizer(cadena, separador);//auxiliar para obtener los valores de acuerdo al número de respuestas

        String[] a = new String[5];//cantidad de respuestas
        int i = 0;

        while (token.hasMoreTokens()) {
            a[i] = token.nextToken(); // obtenido el token
            i++;
        }

        return a;
    }

    /**
     * Asigna componentes que ya tienen que estar establecidos en el inicio
     */
    public ActividadColores() {
        initComponents();

        // Timer
        timer = new Timer(1000, (ActionEvent e) -> {
            sec[0]++;
            System.out.println(sec[0]);
        });
        // Inicia el timer
        timer.start();

        /*
            *Invoca el método y recibe la posición previamente instanciada 
           
         */
        String[] k = setRespuestaColor(orden);

        /*
            *Al momento de dar siguiente se eliminan las opciones seleccionadas
         */
        buttonGroupColor.clearSelection();

        /**
         * Asignamos el texto de las respuestas en los botones
         */
        opcion1.setText(k[0]);
        opcion2.setText(k[1]);
        opcion3.setText(k[2]);
        opcion4.setText(k[3]);
        opcion5.setText(k[4]);

        opcion1.requestFocus();
        color.setBackground(Color.red);//el label de color empieza con un color específico
        finalizar.setEnabled(false);//el botón finaliar no puede seleccionarse

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupColor = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        opcion1 = new javax.swing.JButton();
        opcion3 = new javax.swing.JButton();
        opcion2 = new javax.swing.JButton();
        opcion5 = new javax.swing.JButton();
        opcion4 = new javax.swing.JButton();
        listo = new javax.swing.JButton();
        color = new javax.swing.JPanel();
        finalizar = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 18)); // NOI18N
        jLabel3.setText("¿De qué color es la siguiente figura?");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 200, -1, -1));

        opcion1.setBackground(java.awt.Color.pink);
        opcion1.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 18)); // NOI18N
        opcion1.setForeground(new java.awt.Color(255, 255, 255));
        opcion1.setText("Amarillo");
        buttonGroupColor.add(opcion1);
        opcion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcion1ActionPerformed(evt);
            }
        });
        jPanel1.add(opcion1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 270, 130, 60));

        opcion3.setBackground(java.awt.Color.pink);
        opcion3.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 18)); // NOI18N
        opcion3.setForeground(new java.awt.Color(255, 255, 255));
        opcion3.setText("Celeste");
        buttonGroupColor.add(opcion3);
        opcion3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcion3ActionPerformed(evt);
            }
        });
        jPanel1.add(opcion3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 360, 130, 60));

        opcion2.setBackground(java.awt.Color.pink);
        opcion2.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 18)); // NOI18N
        opcion2.setForeground(new java.awt.Color(255, 255, 255));
        opcion2.setText("Verde");
        buttonGroupColor.add(opcion2);
        opcion2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcion2ActionPerformed(evt);
            }
        });
        jPanel1.add(opcion2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 270, 130, 60));

        opcion5.setBackground(java.awt.Color.pink);
        opcion5.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 18)); // NOI18N
        opcion5.setForeground(new java.awt.Color(255, 255, 255));
        opcion5.setText("Naranja");
        buttonGroupColor.add(opcion5);
        opcion5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcion5ActionPerformed(evt);
            }
        });
        jPanel1.add(opcion5, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 360, 130, 60));

        opcion4.setBackground(java.awt.Color.pink);
        opcion4.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 18)); // NOI18N
        opcion4.setForeground(new java.awt.Color(255, 255, 255));
        opcion4.setText("Rosado");
        buttonGroupColor.add(opcion4);
        opcion4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcion4ActionPerformed(evt);
            }
        });
        jPanel1.add(opcion4, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 270, 130, 60));

        listo.setBackground(new java.awt.Color(102, 255, 204));
        listo.setText("Listo");
        listo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listoActionPerformed(evt);
            }
        });
        jPanel1.add(listo, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 470, 70, 40));

        javax.swing.GroupLayout colorLayout = new javax.swing.GroupLayout(color);
        color.setLayout(colorLayout);
        colorLayout.setHorizontalGroup(
            colorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );
        colorLayout.setVerticalGroup(
            colorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel1.add(color, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 50, 200, -1));

        finalizar.setBackground(new java.awt.Color(102, 255, 204));
        finalizar.setText("Finalizar");
        finalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalizarActionPerformed(evt);
            }
        });
        jPanel1.add(finalizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 470, 80, 40));

        closeButton.setBackground(new java.awt.Color(255, 51, 51));
        closeButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        closeButton.setForeground(new java.awt.Color(0, 51, 102));
        closeButton.setText("X");
        closeButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        closeButton.setFocusPainted(false);
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        jPanel1.add(closeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 0, 60, 50));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/fondoColor.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, 530));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 771, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void opcion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcion1ActionPerformed
        /*
       Cuando se selecciona el botón en la posición obtiene la respuesta
         */

        selectColor[orden] = opcion1.getLabel();
        opcion1.setBackground(Color.orange); //asigno un color para identificar el color seleccionado
        
        opcion2.setEnabled(false);//si selecciona el botón el resto de botones se inhabilitan
        opcion3.setEnabled(false);
        opcion4.setEnabled(false);
        opcion5.setEnabled(false);


    }//GEN-LAST:event_opcion1ActionPerformed

    private void opcion5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcion5ActionPerformed
        /*
       Cuando se selecciona el botón la posición obtiene la respuesta
         */
        
        
        selectColor[orden] = opcion5.getLabel();

        opcion5.setBackground(Color.orange);
        opcion2.setEnabled(false);//si selecciona el botón el resto de botones se inhabilitan
        opcion3.setEnabled(false);
        opcion4.setEnabled(false);
        opcion1.setEnabled(false);

    }//GEN-LAST:event_opcion5ActionPerformed

    private void opcion4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcion4ActionPerformed
       /*
       Cuando se selecciona el botón en la posición obtiene la respuesta
         */
        
        selectColor[orden] = opcion4.getLabel();
        opcion4.setBackground(Color.orange);//asigno un color para identificar el color seleccionado
        opcion2.setEnabled(false); //si selecciona el botón el resto de botones se inhabilitan
        opcion3.setEnabled(false);
        opcion1.setEnabled(false);
        opcion5.setEnabled(false);


    }//GEN-LAST:event_opcion4ActionPerformed

    private void opcion2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcion2ActionPerformed
        // TODO add your handling code here:
       
        
        
         /*
       Cuando se selecciona el botón en la posición obtiene la respuesta
         */
         selectColor[orden] = opcion2.getLabel();
        opcion2.setBackground(Color.orange);//asigno un color para identificar el color seleccionado
        opcion1.setEnabled(false); //si selecciona el botón el resto de botones se inhabilitan
        opcion3.setEnabled(false);
        opcion4.setEnabled(false);
        opcion5.setEnabled(false);
    }//GEN-LAST:event_opcion2ActionPerformed

    private void opcion3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcion3ActionPerformed
       /*
       Cuando se selecciona el botón en la posición obtiene la respuesta
         */
       selectColor[orden] = opcion3.getLabel();
        opcion3.setBackground(Color.orange);//asigno un color para identificar el color seleccionado
        opcion2.setEnabled(false);//si selecciona el botón el resto de botones se inhabilitan
        opcion1.setEnabled(false);
        opcion4.setEnabled(false);
        opcion5.setEnabled(false);

    }//GEN-LAST:event_opcion3ActionPerformed
    int cont = 0;

    private void listoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listoActionPerformed

        cont++;
        
        /**
         * asignamos un color general para todos los botones
         */

        opcion1.setBackground(Color.PINK);
        opcion2.setBackground(Color.PINK);
        opcion3.setBackground(Color.PINK);
        opcion4.setBackground(Color.PINK);
        opcion5.setBackground(Color.PINK);
        opcion1.setEnabled(true);
        opcion2.setEnabled(true);
        opcion3.setEnabled(true);
        opcion4.setEnabled(true);
        opcion5.setEnabled(true);
        
        /**
         * Validamos que no pueda seleccionar el botón finalizar hasta terminar la actividad
         *
         */

        if (orden == 3) {
            listo.setEnabled(false);
            finalizar.setEnabled(true);

        }
        
        
        /*
        *Cada que se seleccione el botón listo cambia el color y no se repite
        */
        
        

        if (cont == 0) {
            color.setBackground(Color.red);

        }
        if (cont == 1) {
            color.setBackground(Color.blue);

        }

        if (cont == 2) {
            color.setBackground(Color.YELLOW);
        }

        if (cont == 3) {
            color.setBackground(Color.GREEN);
        }

        if (cont == 4) {
            color.setBackground(Color.magenta);

        }
        
        
        /**
         * Asigna el texto en cada botón y obtiene su posición
         */

        if (orden < 5) {

            orden++;
            String[] k = setRespuestaColor(orden);

            opcion1.setText(k[0]);
            opcion2.setText(k[1]);
            opcion3.setText(k[2]);
            opcion4.setText(k[3]);
            opcion5.setText(k[4]);

        } 


    }//GEN-LAST:event_listoActionPerformed

    
    /**
     * 
     * Botón que calcula y entrega el resultado 
     */
    private void finalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalizarActionPerformed
        int calificacion = 0;
        // Detiene el timer
        timer.stop();
        
        //for itera hasta la cantidad de opciones de respuesta
        for (int i = 0; i < 5; i++) {
            if (selectColor[i].equals(getColor(i))) {//Compara la respuesta obtenida con la respuesta correcta

                calificacion ++;//incrementa la calificación

            }
        
        }

        calificacion = calificacion * 2;//Calcula la calificación

        JOptionPane.showMessageDialog(null, "Tu calificación es " + calificacion + "/10");//Muestra la calificación en un panel
        this.setVisible(false);

        // SQL insertar en la base de datos
        // Crea un registro enviando (String cedula, String nombre, int aciertos, float puntuacion, Fecha fecha, String etapa, int segundos)
        ResultadoActividad registro = new ResultadoActividad(MainScreen.userID, "Identificar colores", calificacion, calificacion, new Fecha(), "Moderada", sec[0]);
        // Invoca al metodo que registra los datos en la base de datos
        registro.registrarDataBase();
    }//GEN-LAST:event_finalizarActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        // Muestra un panel para elegir si terminar la actividad o no hacerlo
        int confirmado = JOptionPane.showConfirmDialog(null, "¿Terminar actividad? El progreso no se guardará", "Terminar", JOptionPane.YES_NO_OPTION);
        // Si la opcion terminar es seleccionada
        if (JOptionPane.OK_OPTION == confirmado) {
            this.setVisible(false);
            // Detiene el timer
            timer.stop();
        }
    }//GEN-LAST:event_closeButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ActividadColores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ActividadColores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ActividadColores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ActividadColores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ActividadColores().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupColor;
    private javax.swing.JButton closeButton;
    private javax.swing.JPanel color;
    private javax.swing.JButton finalizar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton listo;
    private javax.swing.JButton opcion1;
    private javax.swing.JButton opcion2;
    private javax.swing.JButton opcion3;
    private javax.swing.JButton opcion4;
    private javax.swing.JButton opcion5;
    // End of variables declaration//GEN-END:variables
}
